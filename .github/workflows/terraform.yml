name: Review or deploy Terraform changes

on:
  push:
    tags:
      - "*"
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  tf-plan:
    # strategy:
    #   matrix:
    #     region: [eu-central-1]
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: arn:aws:iam:214421308623:role/GitHub-Actions
      #     role-session-name: gh-actions-billing
      #     aws-region: ${{ matrix.region }}
      # - name: Terraform Setup
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.3.6
      # - name: Terraform Format
      #   id: fmt
      #   run: terraform fmt -check -no-color
      #   continue-on-error: true
      # - name: Terraform Init
      #   id: init
      #   run: terraform init -no-color
      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color
      # - name: Comma Colonel Cobus fmt Check
      #   if: steps.fmt.outcome
      #   run: terraform fmt -no-color
      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1
      - name: Environment
        run: env
      - name: Terraform Apply (Development)
        if: github.ref != 'refs/heads/main'
        run: echo "deploy to stage - development"
      - name: Terraform Apply (Staging)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: echo "deploy to stage - staging"
      - name: Terraform Apply (Production)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && ${{ steps.release.outputs.releases_created }}
        run: echo "deploy to stage - production"